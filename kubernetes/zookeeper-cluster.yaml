apiVersion: v1
kind: Service
metadata:
  name: zookeeper-svc
  namespace: development
spec:
  type: NodePort
  selector:
    app: zookeeper
  ports:
  - name: zk-cli
    port: 2181
    nodePort: 30181
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  namespace: development
  labels:
    app: zookeeper
spec:
  clusterIP: None
  selector:
    app: zookeeper
  ports:
  - name: server
    port: 2888
  - name: leader-election
    port: 3888
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cm
  namespace: development
data:
  entrypoint.sh: |-
    #!/bin/bash
    HOSTNAME="$(hostname -s)"
    if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
      MY_ID=${BASH_REMATCH[2]}
      echo "$MY_ID" > $ZOO_DATA_DIR/myid
    else
      echo "Failed to get index from hostname $HOST"
      exit 1
    fi

    if [[ ! -f "$ZOO_CONF_DIR/zoo.cfg" ]]; then
      CONFIG="$ZOO_CONF_DIR/zoo.cfg"
      {
        echo "clientPort=2181"
        echo "dataDir=$ZOO_DATA_DIR"
        echo "dataLogDir=$ZOO_DATA_LOG_DIR"

        echo "tickTime=$ZOO_TICK_TIME"
        echo "initLimit=$ZOO_INIT_LIMIT"
        echo "syncLimit=$ZOO_SYNC_LIMIT"

        echo "autopurge.snapRetainCount=$ZOO_AUTOPURGE_SNAPRETAINCOUNT"
        echo "autopurge.purgeInterval=$ZOO_AUTOPURGE_PURGEINTERVAL"
        echo "maxClientCnxns=$ZOO_MAX_CLIENT_CNXNS"
        echo "standaloneEnabled=$ZOO_STANDALONE_ENABLED"
        echo "admin.enableServer=$ZOO_ADMINSERVER_ENABLED"
      } >> "$CONFIG"
    fi

    for server in $ZOO_SERVERS;do
      echo "$server" >> "$CONFIG"
    done

    zkServer.sh --config $ZOO_CONF_DIR start-foreground
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: development
spec:
  replicas: 3
  serviceName: zookeeper-headless
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      volumes:
      - name: scripts
        configMap:
          name: zk-cm
          defaultMode: 0755
      containers:
      - name: zookeeper
        image: zookeeper
        command:
            - /scripts/entrypoint.sh
        env:
        - name: ZOO_SERVERS
          value: >-
            server.0=zookeeper-0.zookeeper-headless.development.svc.cluster.local:2888:3888;2181
            server.1=zookeeper-1.zookeeper-headless.development.svc.cluster.local:2888:3888;2181
            server.2=zookeeper-2.zookeeper-headless.development.svc.cluster.local:2888:3888;2181
        volumeMounts:
        - name: scripts
          mountPath: /scripts/entrypoint.sh
          subPath: entrypoint.sh
        - name: data
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 2
          successThreshold: 1
          failureThreshold: 1
  volumeClaimTemplates:
  - metadata:
      name: data
      namespace: development
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "nfs-client"
      resources:
        requests:
          storage: 2Gi
